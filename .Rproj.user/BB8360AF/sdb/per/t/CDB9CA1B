{
    "collab_server" : "",
    "contents" : "## Reginald Edwards\n## CREATED: 1 March 2018\n## MODIFIED:\n## DESCRIPTION: Compute the probability regular season win percentages and use\n## ase probability of tournament win\n###############################################################################\n\n\nrm(list=ls())\n\n###############################################################################\n## Training data\n###############################################################################\n\n## load regular season results\nX.season <- read.csv('data/raw/RegularSeasonCompactResults.csv',\n  stringsAsFactors = FALSE)\nnames(X.season) <- tolower(names(X.season))\nX.season$game <- 1\nwins <- aggregate(X.season$game, by = list(X.season$season, X.season$wteamid), FUN = sum)\nnames(wins) <- c('season', 'teamid', 'n.wins')\n\nlosses <- aggregate(X.season$game, by = list(X.season$season, X.season$lteamid), FUN = sum)\nnames(losses) <- c('season', 'teamid', 'n.losses')\n\nteam.record <- merge(wins, losses, all.x = TRUE, all.y = TRUE)\nteam.record$n.wins <- ifelse(is.na(team.record$n.wins), 0, team.record$n.wins)\nteam.record$n.losses <- ifelse(is.na(team.record$n.losses), 0, team.record$n.losses)\nteam.record$games <- team.record$n.wins + team.record$n.losses\nteam.record$win.pct <- team.record$n.wins/team.record$games\nsummary(team.record)\n\nteam.record[which(team.record$win.pct == 1),]\n## Unbeaten in the regular season\n## 1991, UNLV\n## 2014 Wichitaw St\n## 2015 Kentucky\n\n## Add win pct, wins, losses, and number of game of team 1 as features\n\n## load training data\nload('data/working/training.RData')\nX.train <- merge(X.train, team.record, by.x = c('season', 'team1'), by.y = c('season', 'teamid'))\nX.train$wins1 <- X.train$n.wins\nX.train$losses1 <- X.train$n.losses\nX.train$games1 <- X.train$games\nX.train$win.pct1 <- X.train$win.pct\n\nX.train$n.wins <- NULL\nX.train$n.losses <- NULL\nX.train$games <- NULL\nX.train$win.pct <- NULL\n\nX.train <- merge(X.train, team.record, by.x = c('season', 'team2'), by.y = c('season', 'teamid'))\nX.train$wins2 <- X.train$n.wins\nX.train$losses2 <- X.train$n.losses\nX.train$games2 <- X.train$games\nX.train$win.pct2 <- X.train$win.pct\n\nX.train$n.wins <- NULL\nX.train$n.losses <- NULL\nX.train$games <- NULL\nX.train$win.pct <- NULL\n\no <- order(X.train$season, X.train$daynum, X.train$wteamid)\nX.train <- X.train[o, ]\n\nsave(X.train, file = 'data/working/training.RData')\n\n## Michigan's 2012-2013 season\n#X.train[X.train$season == 2013 & (X.train$wteamid == 1276 | X.train$lteamid == 1276), ]\n\n###############################################################################\n## Test data\n###############################################################################\nload('data/working/testing.RData')\n\nX.test <- merge(X.test, team.record, by.x = c('season', 'team1'), by.y = c('season', 'teamid'))\nX.test$wins1 <- X.test$n.wins\nX.test$losses1 <- X.test$n.losses\nX.test$games1 <- X.test$games\nX.test$win.pct1 <- X.test$win.pct\n\nX.test$n.wins <- NULL\nX.test$n.losses <- NULL\nX.test$games <- NULL\nX.test$win.pct <- NULL\n\nX.test <- merge(X.test, team.record, by.x = c('season', 'team2'), by.y = c('season', 'teamid'))\nX.test$wins2 <- X.test$n.wins\nX.test$losses2 <- X.test$n.losses\nX.test$games2 <- X.test$games\nX.test$win.pct2 <- X.test$win.pct\n\nX.test$n.wins <- NULL\nX.test$n.losses <- NULL\nX.test$games <- NULL\nX.test$win.pct <- NULL\n\no <- order(X.test$season, X.test$team1)\nX.test <- X.test[o, ]\n \nsave(X.test, file = 'data/working/testing.RData')\n",
    "created" : 1519935379559.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1860830027",
    "id" : "CDB9CA1B",
    "lastKnownWriteTime" : 1519946447,
    "last_content_update" : 1519946447169,
    "path" : "C:/Users/Reginald/Dropbox/Kaggle - NCAA ML 2018/code/reg-season-win-probability.R",
    "project_path" : "code/reg-season-win-probability.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}